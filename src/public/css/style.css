:root{
    --redColor: rgb(172, 0, 0);
    --blackColor: var(--blackColor);
    --plataColor: rgb(218, 213, 213);
}

*{
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif;
}



.card{
    box-shadow: 0 0px 10px inset rgb(167, 167, 167);
    transition: 0.1s;
    -webkit-transition: 0.1s;
    -moz-transition: 0.1s;
    -ms-transition: 0.1s;
    -o-transition: 0.1s;
}








/* targeta animada con lineas atras y de color negro */
.target{
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    background: rgb(0, 0, 0,0.5);
    overflow: hidden;
    border-radius: 20px;
    -webkit-border-radius: 20px;
    -moz-border-radius: 20px;
    -ms-border-radius: 20px;
    -o-border-radius: 20px;
    box-shadow: 0px 0px 0px 0.2px white;
}
.target::before{
    content: '';
    position: absolute;
    width: 150px;
    height: 140%;
    background: linear-gradient(rgb(255, 255, 255),var(--redColor));
    animation: girar 30s linear infinite;
}
.target::after{
    content: '';
    position: absolute;
    inset: 3px;
    background: rgb(32, 32, 32);
    border-radius: 16px;
    -webkit-border-radius: 16px;
    -moz-border-radius: 16px;
    -ms-border-radius: 16px;
    -o-border-radius: 16px;
}

@keyframes girar{
    0%{
        transform: rotate(0deg);
    }
    100%{
        transform: rotate(360deg);
    }

}

 /* Input and this errors */
.boxInput{
    position: relative;
}

.boxInput input{
    width: 100%;
    background: transparent;
    border: none;
    outline: none;
    box-shadow: none;
    color: #fff;
    font-size: 1em;
    letter-spacing: 0.1em;
    padding: 5px 2px 2px 7px;

}
.boxInput span{
    position: absolute;
    color: rgba(255,255,255,0.5);
    text-transform: uppercase;
    pointer-events: none;
    font-size: 0.9em;
    transition: 0.5S;
    -webkit-transition: 0.5S;
    -moz-transition: 0.5S;
    -ms-transition: 0.5S;
    -o-transition: 0.5S;
    transform: translateY(-100%);

}

.boxInput p{
    color:var(--redColor);
    font-size: 88%;
    text-shadow: 0 0 1px rgb(0, 0, 0);
}

.boxInput input:focus ~ span,
.boxInput input:valid ~ span{
    transform: translateY(-260%);
    font-size: 0.8em;
    padding-left: 5px;
}
.boxInput input:focus,
.boxInput input:valid{
    box-shadow: none;
    background-color: rgba(255, 255, 255, 0.25);
    color: white;
}
.boxInput i{
    position: absolute;
    width: 100%;
    height: 2px;
    left: 0;
    bottom: 0;
    transform: translateY(5px);
    background: rgb(255, 255, 255);
    -webkit-transform: translateY(5px);
    -moz-transform: translateY(5px);
    -ms-transform: translateY(5px);
    -o-transform: translateY(5px);
    overflow: hidden;
}
.boxInput i::before{
    content: '';
    position: absolute;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, var(--redColor), rgb(0, 0, 0),rgb(255, 255, 255), rgb(0, 0, 0),var(--redColor));
    animation: animate 3s linear infinite;
    border-radius: 12px;
    -webkit-border-radius: 12px;
    -moz-border-radius: 12px;
    -ms-border-radius: 12px;
    -o-border-radius: 12px;
    transition: 0.5s;
    -webkit-transition: 0.5s;
    -moz-transition: 0.5s;
    -ms-transition: 0.5s;
    -o-transition: 0.5s;
}



.boxInput input:focus ~ i::before,
.boxInput input:valid ~ i::before{
    left: 0%;
}



@keyframes animate{
    0%{
        background-position-x: 0%;
    }
    100%{
        background-position-x: 275px;
    }
}



/* Toast */
.show{
    position: relative;
    animation: show_toast 1s ease forwards;
    -webkit-animation: show_toast 1s ease forwards;
}

@keyframes show_toast {
    0% {
      transform: translateX(2%);
      -webkit-transform: translateX(2%);
      -moz-transform: translateX(2%);
      -ms-transform: translateX(2%);
      -o-transform: translateX(2%);
      opacity: 0;
}
    40% {
      transform: translateX(-5%);
      -webkit-transform: translateX(-5%);
      -moz-transform: translateX(-5%);
      -ms-transform: translateX(-5%);
      -o-transform: translateX(-5%);
        opacity: 0.8;
}
    80% {
      transform: translateX(0%);
      opacity: 1;
    }
    100% {
      transform: translateX(-10px);
    }
  }


